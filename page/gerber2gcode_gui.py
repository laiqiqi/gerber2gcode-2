#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.26
#  in conjunction with Tcl version 8.6
#    Dec 02, 2019 04:15:22 PM CET  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import gerber2gcode_gui_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    gerber2gcode_gui_support.set_Tk_var()
    top = main_window (root)
    gerber2gcode_gui_support.init(root, top)
    root.mainloop()

w = None
def create_main_window(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    gerber2gcode_gui_support.set_Tk_var()
    top = main_window (w)
    gerber2gcode_gui_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_main_window():
    global w
    w.destroy()
    w = None

class main_window:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("800x580+621+362")
        top.minsize(800, 600)
        top.maxsize(800, 600)
        top.resizable(0, 0)
        top.title("GERBER2GCODE - Solder paste dispenser for 3D printer")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.sub_menu = tk.Menu(top,tearoff=0)
        self.menubar.add_cascade(menu=self.sub_menu,
                activebackground="#ececec",
                activeforeground="#000000",
                background="#d9d9d9",
                font="TkMenuFont",
                foreground="#000000",
                label="File")
        self.sub_menu.add_command(
                activebackground="#ececec",
                activeforeground="#000000",
                background="#d9d9d9",
                command=gerber2gcode_gui_support.gui_button_exit,
                font="TkMenuFont",
                foreground="#000000",
                label="Exit")

        self.style.configure('TNotebook.Tab', background=_bgcolor)
        self.style.configure('TNotebook.Tab', foreground=_fgcolor)
        self.style.map('TNotebook.Tab', background=
            [('selected', _compcolor), ('active',_ana2color)])
        self.gui_notebook = ttk.Notebook(top)
        self.gui_notebook.place(relx=0.0, rely=0.0, relheight=1.045
                , relwidth=1.005)
        self.gui_notebook.configure(takefocus="")
        self.gui_notebook_t0 = tk.Frame(self.gui_notebook)
        self.gui_notebook.add(self.gui_notebook_t0, padding=3)
        self.gui_notebook.tab(0, text="Main",compound="left",underline="-1",)
        self.gui_notebook_t0.configure(relief="groove")
        self.gui_notebook_t0.configure(background="#d9d9d9")
        self.gui_notebook_t0.configure(highlightbackground="#d9d9d9")
        self.gui_notebook_t0.configure(highlightcolor="black")
        self.gui_notebook_t1 = tk.Frame(self.gui_notebook)
        self.gui_notebook.add(self.gui_notebook_t1, padding=3)
        self.gui_notebook.tab(1, text="G-code settings", compound="none"
                ,underline="-1", )
        self.gui_notebook_t1.configure(background="#d9d9d9")
        self.gui_notebook_t1.configure(highlightbackground="#d9d9d9")
        self.gui_notebook_t1.configure(highlightcolor="black")
        self.gui_notebook_t2 = tk.Frame(self.gui_notebook)
        self.gui_notebook.add(self.gui_notebook_t2, padding=3)
        self.gui_notebook.tab(2, text="3D printer", compound="left"
                ,underline="-1", )
        self.gui_notebook_t2.configure(background="#d9d9d9")
        self.gui_notebook_t2.configure(highlightbackground="#d9d9d9")
        self.gui_notebook_t2.configure(highlightcolor="black")
        self.gui_notebook_t3 = tk.Frame(self.gui_notebook)
        self.gui_notebook.add(self.gui_notebook_t3, padding=3)
        self.gui_notebook.tab(3, text="Log",compound="none",underline="-1",)
        self.gui_notebook_t3.configure(background="#d9d9d9")
        self.gui_notebook_t3.configure(highlightbackground="#d9d9d9")
        self.gui_notebook_t3.configure(highlightcolor="black")

        self.gui_labelframe_preview = tk.LabelFrame(self.gui_notebook_t0)
        self.gui_labelframe_preview.place(relx=0.463, rely=0.017, relheight=0.81
                , relwidth=0.525)
        self.gui_labelframe_preview.configure(relief='groove')
        self.gui_labelframe_preview.configure(foreground="black")
        self.gui_labelframe_preview.configure(text='''Preview''')
        self.gui_labelframe_preview.configure(background="#d9d9d9")
        self.gui_labelframe_preview.configure(highlightbackground="#d9d9d9")
        self.gui_labelframe_preview.configure(highlightcolor="black")

        self.gui_preview_canvas = tk.Canvas(self.gui_labelframe_preview)
        self.gui_preview_canvas.place(relx=0.024, rely=0.043, relheight=0.851
                , relwidth=0.952, bordermode='ignore')
        self.gui_preview_canvas.configure(background="#ffffff")
        self.gui_preview_canvas.configure(borderwidth="2")
        self.gui_preview_canvas.configure(highlightbackground="#d9d9d9")
        self.gui_preview_canvas.configure(highlightcolor="black")
        self.gui_preview_canvas.configure(insertbackground="black")
        self.gui_preview_canvas.configure(relief="ridge")
        self.gui_preview_canvas.configure(selectbackground="#c4c4c4")
        self.gui_preview_canvas.configure(selectforeground="black")

        self.gui_preview_button_topside = tk.Button(self.gui_labelframe_preview)
        self.gui_preview_button_topside.place(relx=0.286, rely=0.894, height=44
                , width=87, bordermode='ignore')
        self.gui_preview_button_topside.configure(activebackground="#ececec")
        self.gui_preview_button_topside.configure(activeforeground="#000000")
        self.gui_preview_button_topside.configure(background="#d9d9d9")
        self.gui_preview_button_topside.configure(command=gerber2gcode_gui_support.gui_preview_button_topside)
        self.gui_preview_button_topside.configure(disabledforeground="#a3a3a3")
        self.gui_preview_button_topside.configure(foreground="#000000")
        self.gui_preview_button_topside.configure(highlightbackground="#d9d9d9")
        self.gui_preview_button_topside.configure(highlightcolor="black")
        self.gui_preview_button_topside.configure(pady="0")
        self.gui_preview_button_topside.configure(text='''Top side''')

        self.gui_preview_button_bottomside = tk.Button(self.gui_labelframe_preview)
        self.gui_preview_button_bottomside.place(relx=0.5, rely=0.894, height=44
                , width=87, bordermode='ignore')
        self.gui_preview_button_bottomside.configure(activebackground="#ececec")
        self.gui_preview_button_bottomside.configure(activeforeground="#000000")
        self.gui_preview_button_bottomside.configure(background="#d9d9d9")
        self.gui_preview_button_bottomside.configure(command=gerber2gcode_gui_support.gui_preview_button_bottomside)
        self.gui_preview_button_bottomside.configure(disabledforeground="#a3a3a3")
        self.gui_preview_button_bottomside.configure(foreground="#000000")
        self.gui_preview_button_bottomside.configure(highlightbackground="#d9d9d9")
        self.gui_preview_button_bottomside.configure(highlightcolor="black")
        self.gui_preview_button_bottomside.configure(pady="0")
        self.gui_preview_button_bottomside.configure(text='''Bottom side''')

        self.gui_labelframe_import = tk.LabelFrame(self.gui_notebook_t0)
        self.gui_labelframe_import.place(relx=0.013, rely=0.017, relheight=0.147
                , relwidth=0.438)
        self.gui_labelframe_import.configure(relief='groove')
        self.gui_labelframe_import.configure(foreground="black")
        self.gui_labelframe_import.configure(text='''Import''')
        self.gui_labelframe_import.configure(background="#d9d9d9")
        self.gui_labelframe_import.configure(highlightbackground="#d9d9d9")
        self.gui_labelframe_import.configure(highlightcolor="black")

        self.gui_button_importGerber = tk.Button(self.gui_labelframe_import)
        self.gui_button_importGerber.place(relx=0.057, rely=0.353, height=34
                , width=147, bordermode='ignore')
        self.gui_button_importGerber.configure(activebackground="#ececec")
        self.gui_button_importGerber.configure(activeforeground="#000000")
        self.gui_button_importGerber.configure(background="#d9d9d9")
        self.gui_button_importGerber.configure(command=gerber2gcode_gui_support.gui_button_importGerber)
        self.gui_button_importGerber.configure(disabledforeground="#a3a3a3")
        self.gui_button_importGerber.configure(foreground="#000000")
        self.gui_button_importGerber.configure(highlightbackground="#d9d9d9")
        self.gui_button_importGerber.configure(highlightcolor="black")
        self.gui_button_importGerber.configure(pady="0")
        self.gui_button_importGerber.configure(text='''Import GERBER file...''')

        self.Labelframe1 = tk.LabelFrame(self.gui_notebook_t0)
        self.Labelframe1.place(relx=0.013, rely=0.172, relheight=0.629
                , relwidth=0.438)
        self.Labelframe1.configure(relief='groove')
        self.Labelframe1.configure(foreground="black")
        self.Labelframe1.configure(text='''PCB geometry''')
        self.Labelframe1.configure(background="#d9d9d9")
        self.Labelframe1.configure(cursor="fleur")

        self.Label1 = tk.Label(self.Labelframe1)
        self.Label1.place(relx=0.029, rely=0.11, height=21, width=124
                , bordermode='ignore')
        self.Label1.configure(anchor='w')
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(cursor="fleur")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(justify='left')
        self.Label1.configure(text='''Multi PCB:''')

        self.Label1 = tk.Label(self.Labelframe1)
        self.Label1.place(relx=0.029, rely=0.055, height=21, width=124
                , bordermode='ignore')
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(anchor='w')
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(justify='left')
        self.Label1.configure(text='''PCB thickness (mm):''')

        self.gui_main_pcbhor = tk.Spinbox(self.Labelframe1, from_=1.0, to=10.0)
        self.gui_main_pcbhor.place(relx=0.514, rely=0.274, relheight=0.052
                , relwidth=0.157, bordermode='ignore')
        self.gui_main_pcbhor.configure(activebackground="#f9f9f9")
        self.gui_main_pcbhor.configure(background="white")
        self.gui_main_pcbhor.configure(buttonbackground="#d9d9d9")
        self.gui_main_pcbhor.configure(disabledforeground="#a3a3a3")
        self.gui_main_pcbhor.configure(font="TkDefaultFont")
        self.gui_main_pcbhor.configure(foreground="black")
        self.gui_main_pcbhor.configure(highlightbackground="black")
        self.gui_main_pcbhor.configure(highlightcolor="black")
        self.gui_main_pcbhor.configure(insertbackground="black")
        self.gui_main_pcbhor.configure(selectbackground="#c4c4c4")
        self.gui_main_pcbhor.configure(selectforeground="black")
        self.gui_main_pcbhor.configure(textvariable=gerber2gcode_gui_support.spinbox)

        self.gui_main_pcbthickness = tk.Spinbox(self.Labelframe1, from_=0.0, to=2.0)
        self.gui_main_pcbthickness.place(relx=0.4, rely=0.055, relheight=0.052
                , relwidth=0.157, bordermode='ignore')
        self.gui_main_pcbthickness.configure(activebackground="#f9f9f9")
        self.gui_main_pcbthickness.configure(background="white")
        self.gui_main_pcbthickness.configure(buttonbackground="#d9d9d9")
        self.gui_main_pcbthickness.configure(disabledforeground="#a3a3a3")
        self.gui_main_pcbthickness.configure(font="TkDefaultFont")
        self.gui_main_pcbthickness.configure(foreground="black")
        self.gui_main_pcbthickness.configure(format="%1.2f")
        self.gui_main_pcbthickness.configure(highlightbackground="black")
        self.gui_main_pcbthickness.configure(highlightcolor="black")
        self.gui_main_pcbthickness.configure(increment="0.1")
        self.gui_main_pcbthickness.configure(insertbackground="black")
        self.gui_main_pcbthickness.configure(selectbackground="#c4c4c4")
        self.gui_main_pcbthickness.configure(selectforeground="black")
        self.gui_main_pcbthickness.configure(textvariable=gerber2gcode_gui_support.spinbox)

        self.gui_gcode_labelframe_initial = tk.LabelFrame(self.gui_notebook_t1)
        self.gui_gcode_labelframe_initial.place(relx=0.013, rely=0.069
                , relheight=0.457, relwidth=0.475)
        self.gui_gcode_labelframe_initial.configure(relief='groove')
        self.gui_gcode_labelframe_initial.configure(foreground="black")
        self.gui_gcode_labelframe_initial.configure(text='''Initial settings''')
        self.gui_gcode_labelframe_initial.configure(background="#d9d9d9")
        self.gui_gcode_labelframe_initial.configure(highlightbackground="#d9d9d9")
        self.gui_gcode_labelframe_initial.configure(highlightcolor="black")

        self.gui_checkbutton_gcode_autohome = tk.Checkbutton(self.gui_gcode_labelframe_initial)
        self.gui_checkbutton_gcode_autohome.place(relx=0.026, rely=0.113
                , relheight=0.057, relwidth=0.555, bordermode='ignore')
        self.gui_checkbutton_gcode_autohome.configure(activebackground="#ececec")
        self.gui_checkbutton_gcode_autohome.configure(activeforeground="#000000")
        self.gui_checkbutton_gcode_autohome.configure(anchor='w')
        self.gui_checkbutton_gcode_autohome.configure(background="#d9d9d9")
        self.gui_checkbutton_gcode_autohome.configure(disabledforeground="#a3a3a3")
        self.gui_checkbutton_gcode_autohome.configure(foreground="#000000")
        self.gui_checkbutton_gcode_autohome.configure(highlightbackground="#d9d9d9")
        self.gui_checkbutton_gcode_autohome.configure(highlightcolor="black")
        self.gui_checkbutton_gcode_autohome.configure(justify='left')
        self.gui_checkbutton_gcode_autohome.configure(text='''Auto-home (G28)''')
        self.gui_checkbutton_gcode_autohome.configure(variable=gerber2gcode_gui_support.che58)

        self.Entry1 = tk.Entry(self.gui_gcode_labelframe_initial)
        self.Entry1.place(relx=0.211, rely=0.453, height=20, relwidth=0.432
                , bordermode='ignore')
        self.Entry1.configure(background="white")
        self.Entry1.configure(disabledforeground="#a3a3a3")
        self.Entry1.configure(font="TkFixedFont")
        self.Entry1.configure(foreground="#000000")
        self.Entry1.configure(highlightbackground="#d9d9d9")
        self.Entry1.configure(highlightcolor="black")
        self.Entry1.configure(insertbackground="black")
        self.Entry1.configure(selectbackground="#c4c4c4")
        self.Entry1.configure(selectforeground="black")

        self.Spinbox1 = tk.Spinbox(self.gui_gcode_labelframe_initial, from_=1.0, to=20.0)
        self.Spinbox1.place(relx=0.842, rely=0.113, relheight=0.072
                , relwidth=0.118, bordermode='ignore')
        self.Spinbox1.configure(activebackground="#f9f9f9")
        self.Spinbox1.configure(background="white")
        self.Spinbox1.configure(buttonbackground="#d9d9d9")
        self.Spinbox1.configure(disabledforeground="#a3a3a3")
        self.Spinbox1.configure(font="TkDefaultFont")
        self.Spinbox1.configure(foreground="black")
        self.Spinbox1.configure(highlightbackground="black")
        self.Spinbox1.configure(highlightcolor="black")
        self.Spinbox1.configure(insertbackground="black")
        self.Spinbox1.configure(selectbackground="#c4c4c4")
        self.Spinbox1.configure(selectforeground="black")
        self.Spinbox1.configure(textvariable=gerber2gcode_gui_support.spinbox)

        self.gui_gcode_labelframe_final = tk.LabelFrame(self.gui_notebook_t1)
        self.gui_gcode_labelframe_final.place(relx=0.513, rely=0.069
                , relheight=0.284, relwidth=0.475)
        self.gui_gcode_labelframe_final.configure(relief='groove')
        self.gui_gcode_labelframe_final.configure(foreground="black")
        self.gui_gcode_labelframe_final.configure(text='''Final settings''')
        self.gui_gcode_labelframe_final.configure(background="#d9d9d9")
        self.gui_gcode_labelframe_final.configure(highlightbackground="#d9d9d9")
        self.gui_gcode_labelframe_final.configure(highlightcolor="black")

        self.gui_gcode_button_load = tk.Button(self.gui_notebook_t1)
        self.gui_gcode_button_load.place(relx=0.013, rely=0.017, height=24
                , width=97)
        self.gui_gcode_button_load.configure(activebackground="#ececec")
        self.gui_gcode_button_load.configure(activeforeground="#000000")
        self.gui_gcode_button_load.configure(background="#d9d9d9")
        self.gui_gcode_button_load.configure(disabledforeground="#a3a3a3")
        self.gui_gcode_button_load.configure(foreground="#000000")
        self.gui_gcode_button_load.configure(highlightbackground="#d9d9d9")
        self.gui_gcode_button_load.configure(highlightcolor="black")
        self.gui_gcode_button_load.configure(pady="0")
        self.gui_gcode_button_load.configure(text='''Load settings''')

        self.gui_gcode_button_save = tk.Button(self.gui_notebook_t1)
        self.gui_gcode_button_save.place(relx=0.138, rely=0.017, height=24
                , width=97)
        self.gui_gcode_button_save.configure(activebackground="#ececec")
        self.gui_gcode_button_save.configure(activeforeground="#000000")
        self.gui_gcode_button_save.configure(background="#d9d9d9")
        self.gui_gcode_button_save.configure(disabledforeground="#a3a3a3")
        self.gui_gcode_button_save.configure(foreground="#000000")
        self.gui_gcode_button_save.configure(highlightbackground="#d9d9d9")
        self.gui_gcode_button_save.configure(highlightcolor="black")
        self.gui_gcode_button_save.configure(pady="0")
        self.gui_gcode_button_save.configure(text='''Save settings''')

        self.gui_gcode_button_reset = tk.Button(self.gui_notebook_t1)
        self.gui_gcode_button_reset.place(relx=0.863, rely=0.017, height=24
                , width=97)
        self.gui_gcode_button_reset.configure(activebackground="#ececec")
        self.gui_gcode_button_reset.configure(activeforeground="#000000")
        self.gui_gcode_button_reset.configure(background="#d9d9d9")
        self.gui_gcode_button_reset.configure(disabledforeground="#a3a3a3")
        self.gui_gcode_button_reset.configure(foreground="#000000")
        self.gui_gcode_button_reset.configure(highlightbackground="#d9d9d9")
        self.gui_gcode_button_reset.configure(highlightcolor="black")
        self.gui_gcode_button_reset.configure(pady="0")
        self.gui_gcode_button_reset.configure(text='''Reset settings''')

        self.gui_log_window = tk.Text(self.gui_notebook_t3)
        self.gui_log_window.place(relx=0.013, rely=0.069, relheight=0.869
                , relwidth=0.968)
        self.gui_log_window.configure(background="white")
        self.gui_log_window.configure(exportselection="0")
        self.gui_log_window.configure(font="TkTextFont")
        self.gui_log_window.configure(foreground="black")
        self.gui_log_window.configure(highlightbackground="#d9d9d9")
        self.gui_log_window.configure(highlightcolor="black")
        self.gui_log_window.configure(insertbackground="black")
        self.gui_log_window.configure(selectbackground="#c4c4c4")
        self.gui_log_window.configure(selectforeground="black")
        self.gui_log_window.configure(wrap="word")

        self.gui_button_clearlog = tk.Button(self.gui_notebook_t3)
        self.gui_button_clearlog.place(relx=0.013, rely=0.017, height=24
                , width=77)
        self.gui_button_clearlog.configure(activebackground="#ececec")
        self.gui_button_clearlog.configure(activeforeground="#000000")
        self.gui_button_clearlog.configure(background="#d9d9d9")
        self.gui_button_clearlog.configure(command=gerber2gcode_gui_support.gui_button_clearlog)
        self.gui_button_clearlog.configure(disabledforeground="#a3a3a3")
        self.gui_button_clearlog.configure(foreground="#000000")
        self.gui_button_clearlog.configure(highlightbackground="#d9d9d9")
        self.gui_button_clearlog.configure(highlightcolor="black")
        self.gui_button_clearlog.configure(pady="0")
        self.gui_button_clearlog.configure(text='''Clear log''')

if __name__ == '__main__':
    vp_start_gui()





