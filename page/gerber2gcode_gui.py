#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.26
#  in conjunction with Tcl version 8.6
#    Dec 04, 2019 05:49:45 PM CET  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import gerber2gcode_gui_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    gerber2gcode_gui_support.set_Tk_var()
    top = main_window (root)
    gerber2gcode_gui_support.init(root, top)
    root.mainloop()

w = None
def create_main_window(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    gerber2gcode_gui_support.set_Tk_var()
    top = main_window (w)
    gerber2gcode_gui_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_main_window():
    global w
    w.destroy()
    w = None

class main_window:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("800x580+606+313")
        top.minsize(800, 600)
        top.maxsize(800, 600)
        top.resizable(0, 0)
        top.title("GERBER2GCODE - Solder paste dispenser for 3D printer")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.sub_menu = tk.Menu(top,tearoff=0)
        self.menubar.add_cascade(menu=self.sub_menu,
                activebackground="#ececec",
                activeforeground="#000000",
                background="#d9d9d9",
                font="TkMenuFont",
                foreground="#000000",
                label="File")
        self.sub_menu.add_command(
                activebackground="#ececec",
                activeforeground="#000000",
                background="#d9d9d9",
                command=gerber2gcode_gui_support.gui_button_exit,
                font="TkMenuFont",
                foreground="#000000",
                label="Exit")
        self.sub_menu1 = tk.Menu(top,tearoff=0)
        self.menubar.add_cascade(menu=self.sub_menu1,
                activebackground="#ececec",
                activeforeground="#000000",
                background="#d9d9d9",
                compound="left",
                foreground="#000000",
                label="Settings")
        self.sub_menu1.add_command(
                activebackground="#ececec",
                activeforeground="#000000",
                background="#d9d9d9",
                command=gerber2gcode_gui_support.gui_button_loadsettings,
                foreground="#000000",
                label="Load")
        self.sub_menu1.add_command(
                activebackground="#ececec",
                activeforeground="#000000",
                background="#d9d9d9",
                command=gerber2gcode_gui_support.gui_button_savesettings,
                foreground="#000000",
                label="Save")
        self.sub_menu1.add_separator(
                background="#d9d9d9")
        self.sub_menu1.add_command(
                activebackground="#ececec",
                activeforeground="#000000",
                background="#d9d9d9",
                command=gerber2gcode_gui_support.gui_button_resetsettings,
                foreground="#000000",
                label="Reset")

        self.style.configure('TNotebook.Tab', background=_bgcolor)
        self.style.configure('TNotebook.Tab', foreground=_fgcolor)
        self.style.map('TNotebook.Tab', background=
            [('selected', _compcolor), ('active',_ana2color)])
        self.gui_notebook = ttk.Notebook(top)
        self.gui_notebook.place(relx=0.0, rely=0.0, relheight=1.045
                , relwidth=1.005)
        self.gui_notebook.configure(takefocus="")
        self.gui_notebook_t0 = tk.Frame(self.gui_notebook)
        self.gui_notebook.add(self.gui_notebook_t0, padding=3)
        self.gui_notebook.tab(0, text="Main",compound="left",underline="-1",)
        self.gui_notebook_t0.configure(relief="groove")
        self.gui_notebook_t0.configure(background="#d9d9d9")
        self.gui_notebook_t0.configure(highlightbackground="#d9d9d9")
        self.gui_notebook_t0.configure(highlightcolor="black")
        self.gui_notebook_t1 = tk.Frame(self.gui_notebook)
        self.gui_notebook.add(self.gui_notebook_t1, padding=3)
        self.gui_notebook.tab(1, text="G-code settings", compound="none"
                ,underline="-1", )
        self.gui_notebook_t1.configure(background="#d9d9d9")
        self.gui_notebook_t1.configure(highlightbackground="#d9d9d9")
        self.gui_notebook_t1.configure(highlightcolor="black")
        self.gui_notebook_t2 = tk.Frame(self.gui_notebook)
        self.gui_notebook.add(self.gui_notebook_t2, padding=3)
        self.gui_notebook.tab(2, text="3D printer", compound="left"
                ,underline="-1", )
        self.gui_notebook_t2.configure(background="#d9d9d9")
        self.gui_notebook_t2.configure(highlightbackground="#d9d9d9")
        self.gui_notebook_t2.configure(highlightcolor="black")
        self.gui_notebook_t3 = tk.Frame(self.gui_notebook)
        self.gui_notebook.add(self.gui_notebook_t3, padding=3)
        self.gui_notebook.tab(3, text="Log",compound="none",underline="-1",)
        self.gui_notebook_t3.configure(background="#d9d9d9")
        self.gui_notebook_t3.configure(highlightbackground="#d9d9d9")
        self.gui_notebook_t3.configure(highlightcolor="black")

        self.gui_labelframe_preview = tk.LabelFrame(self.gui_notebook_t0)
        self.gui_labelframe_preview.place(relx=0.338, rely=0.017, relheight=0.931
                , relwidth=0.65)
        self.gui_labelframe_preview.configure(relief='groove')
        self.gui_labelframe_preview.configure(foreground="black")
        self.gui_labelframe_preview.configure(text='''Preview''')
        self.gui_labelframe_preview.configure(background="#d9d9d9")
        self.gui_labelframe_preview.configure(highlightbackground="#d9d9d9")
        self.gui_labelframe_preview.configure(highlightcolor="black")

        self.gui_preview_canvas = tk.Canvas(self.gui_labelframe_preview)
        self.gui_preview_canvas.place(relx=0.019, rely=0.037, relheight=0.926
                , relwidth=0.962, bordermode='ignore')
        self.gui_preview_canvas.configure(background="#ffffff")
        self.gui_preview_canvas.configure(borderwidth="2")
        self.gui_preview_canvas.configure(highlightbackground="#d9d9d9")
        self.gui_preview_canvas.configure(highlightcolor="black")
        self.gui_preview_canvas.configure(insertbackground="black")
        self.gui_preview_canvas.configure(relief="ridge")
        self.gui_preview_canvas.configure(selectbackground="#c4c4c4")
        self.gui_preview_canvas.configure(selectforeground="black")

        self.gui_preview_top = tk.Radiobutton(self.gui_labelframe_preview)
        self.gui_preview_top.place(relx=0.019, rely=0.963, relheight=0.028
                , relwidth=0.188, bordermode='ignore')
        self.gui_preview_top.configure(activebackground="#ececec")
        self.gui_preview_top.configure(activeforeground="#000000")
        self.gui_preview_top.configure(anchor='w')
        self.gui_preview_top.configure(background="#d9d9d9")
        self.gui_preview_top.configure(command=gerber2gcode_gui_support.gui_preview_changesides)
        self.gui_preview_top.configure(disabledforeground="#a3a3a3")
        self.gui_preview_top.configure(foreground="#000000")
        self.gui_preview_top.configure(highlightbackground="#d9d9d9")
        self.gui_preview_top.configure(highlightcolor="black")
        self.gui_preview_top.configure(justify='left')
        self.gui_preview_top.configure(text='''Top side''')
        self.gui_preview_top.configure(value="a")
        self.gui_preview_top.configure(variable=gerber2gcode_gui_support.selectedButton)

        self.gui_preview_bottom = tk.Radiobutton(self.gui_labelframe_preview)
        self.gui_preview_bottom.place(relx=0.212, rely=0.963, relheight=0.028
                , relwidth=0.188, bordermode='ignore')
        self.gui_preview_bottom.configure(activebackground="#ececec")
        self.gui_preview_bottom.configure(activeforeground="#000000")
        self.gui_preview_bottom.configure(anchor='w')
        self.gui_preview_bottom.configure(background="#d9d9d9")
        self.gui_preview_bottom.configure(command=gerber2gcode_gui_support.gui_preview_changesides)
        self.gui_preview_bottom.configure(cursor="fleur")
        self.gui_preview_bottom.configure(disabledforeground="#a3a3a3")
        self.gui_preview_bottom.configure(foreground="#000000")
        self.gui_preview_bottom.configure(highlightbackground="#d9d9d9")
        self.gui_preview_bottom.configure(highlightcolor="black")
        self.gui_preview_bottom.configure(justify='left')
        self.gui_preview_bottom.configure(text='''Bottom side''')
        self.gui_preview_bottom.configure(value="b")
        self.gui_preview_bottom.configure(variable=gerber2gcode_gui_support.selectedButton)

        self.gui_labelframe_import = tk.LabelFrame(self.gui_notebook_t0)
        self.gui_labelframe_import.place(relx=0.013, rely=0.017, relheight=0.284
                , relwidth=0.313)
        self.gui_labelframe_import.configure(relief='groove')
        self.gui_labelframe_import.configure(foreground="black")
        self.gui_labelframe_import.configure(text='''Import''')
        self.gui_labelframe_import.configure(background="#d9d9d9")
        self.gui_labelframe_import.configure(highlightbackground="#d9d9d9")
        self.gui_labelframe_import.configure(highlightcolor="black")

        self.gui_button_importGerber = tk.Button(self.gui_labelframe_import)
        self.gui_button_importGerber.place(relx=0.08, rely=0.182, height=34
                , width=207, bordermode='ignore')
        self.gui_button_importGerber.configure(activebackground="#ececec")
        self.gui_button_importGerber.configure(activeforeground="#000000")
        self.gui_button_importGerber.configure(background="#d9d9d9")
        self.gui_button_importGerber.configure(command=gerber2gcode_gui_support.gui_button_importGerber)
        self.gui_button_importGerber.configure(cursor="fleur")
        self.gui_button_importGerber.configure(disabledforeground="#a3a3a3")
        self.gui_button_importGerber.configure(foreground="#000000")
        self.gui_button_importGerber.configure(highlightbackground="#d9d9d9")
        self.gui_button_importGerber.configure(highlightcolor="black")
        self.gui_button_importGerber.configure(pady="0")
        self.gui_button_importGerber.configure(text='''Import GERBER file...''')

        self.Label_PCBSizeX = tk.Label(self.gui_labelframe_import)
        self.Label_PCBSizeX.place(relx=0.04, rely=0.606, height=41, width=132
                , bordermode='ignore')
        self.Label_PCBSizeX.configure(anchor='w')
        self.Label_PCBSizeX.configure(background="#d9d9d9")
        self.Label_PCBSizeX.configure(disabledforeground="#a3a3a3")
        self.Label_PCBSizeX.configure(foreground="#000000")
        self.Label_PCBSizeX.configure(text='''PCB size on X axis (mm)''')

        self.gui_srcpcbxsize = tk.Entry(self.gui_labelframe_import)
        self.gui_srcpcbxsize.place(relx=0.64, rely=0.667, height=20
                , relwidth=0.256, bordermode='ignore')
        self.gui_srcpcbxsize.configure(background="white")
        self.gui_srcpcbxsize.configure(disabledforeground="#a3a3a3")
        self.gui_srcpcbxsize.configure(font="TkFixedFont")
        self.gui_srcpcbxsize.configure(foreground="#000000")
        self.gui_srcpcbxsize.configure(highlightbackground="#d9d9d9")
        self.gui_srcpcbxsize.configure(highlightcolor="black")
        self.gui_srcpcbxsize.configure(insertbackground="black")
        self.gui_srcpcbxsize.configure(selectbackground="#c4c4c4")
        self.gui_srcpcbxsize.configure(selectforeground="black")
        self.gui_srcpcbxsize.configure(state='readonly')
        self.gui_srcpcbxsize.configure(textvariable=gerber2gcode_gui_support.gui_srcpcbxsize)

        self.gui_srcpcbysize = tk.Entry(self.gui_labelframe_import)
        self.gui_srcpcbysize.place(relx=0.64, rely=0.788, height=20
                , relwidth=0.256, bordermode='ignore')
        self.gui_srcpcbysize.configure(background="white")
        self.gui_srcpcbysize.configure(cursor="fleur")
        self.gui_srcpcbysize.configure(disabledforeground="#a3a3a3")
        self.gui_srcpcbysize.configure(font="TkFixedFont")
        self.gui_srcpcbysize.configure(foreground="#000000")
        self.gui_srcpcbysize.configure(highlightbackground="#d9d9d9")
        self.gui_srcpcbysize.configure(highlightcolor="black")
        self.gui_srcpcbysize.configure(insertbackground="black")
        self.gui_srcpcbysize.configure(selectbackground="#c4c4c4")
        self.gui_srcpcbysize.configure(selectforeground="black")
        self.gui_srcpcbysize.configure(state='readonly')
        self.gui_srcpcbysize.configure(textvariable=gerber2gcode_gui_support.gui_srcpcbysize)

        self.Label_PCBSizeY = tk.Label(self.gui_labelframe_import)
        self.Label_PCBSizeY.place(relx=0.04, rely=0.788, height=21, width=132
                , bordermode='ignore')
        self.Label_PCBSizeY.configure(activebackground="#f9f9f9")
        self.Label_PCBSizeY.configure(activeforeground="black")
        self.Label_PCBSizeY.configure(anchor='w')
        self.Label_PCBSizeY.configure(background="#d9d9d9")
        self.Label_PCBSizeY.configure(disabledforeground="#a3a3a3")
        self.Label_PCBSizeY.configure(foreground="#000000")
        self.Label_PCBSizeY.configure(highlightbackground="#d9d9d9")
        self.Label_PCBSizeY.configure(highlightcolor="black")
        self.Label_PCBSizeY.configure(text='''PCB size on Y axis (mm)''')

        self.Label_SourceFormat = tk.Label(self.gui_labelframe_import)
        self.Label_SourceFormat.place(relx=0.04, rely=0.545, height=21, width=132
                , bordermode='ignore')
        self.Label_SourceFormat.configure(activebackground="#f9f9f9")
        self.Label_SourceFormat.configure(activeforeground="black")
        self.Label_SourceFormat.configure(anchor='w')
        self.Label_SourceFormat.configure(background="#d9d9d9")
        self.Label_SourceFormat.configure(disabledforeground="#a3a3a3")
        self.Label_SourceFormat.configure(foreground="#000000")
        self.Label_SourceFormat.configure(highlightbackground="#d9d9d9")
        self.Label_SourceFormat.configure(highlightcolor="black")
        self.Label_SourceFormat.configure(text='''Source format''')

        self.gui_srcformat = tk.Entry(self.gui_labelframe_import)
        self.gui_srcformat.place(relx=0.64, rely=0.545, height=20, relwidth=0.256
                , bordermode='ignore')
        self.gui_srcformat.configure(background="white")
        self.gui_srcformat.configure(disabledforeground="#a3a3a3")
        self.gui_srcformat.configure(font="TkFixedFont")
        self.gui_srcformat.configure(foreground="#000000")
        self.gui_srcformat.configure(highlightbackground="#d9d9d9")
        self.gui_srcformat.configure(highlightcolor="black")
        self.gui_srcformat.configure(insertbackground="black")
        self.gui_srcformat.configure(selectbackground="#c4c4c4")
        self.gui_srcformat.configure(selectforeground="black")
        self.gui_srcformat.configure(state='readonly')
        self.gui_srcformat.configure(textvariable=gerber2gcode_gui_support.gui_srcformat)

        self.gui_labelframe_pcborigin = tk.LabelFrame(self.gui_notebook_t0)
        self.gui_labelframe_pcborigin.place(relx=0.013, rely=0.31
                , relheight=0.181, relwidth=0.313)
        self.gui_labelframe_pcborigin.configure(relief='groove')
        self.gui_labelframe_pcborigin.configure(foreground="black")
        self.gui_labelframe_pcborigin.configure(text='''PCB origin''')
        self.gui_labelframe_pcborigin.configure(background="#d9d9d9")
        self.gui_labelframe_pcborigin.configure(highlightbackground="#d9d9d9")
        self.gui_labelframe_pcborigin.configure(highlightcolor="black")

        self.gui_3dp_pcbxorig = tk.Spinbox(self.gui_labelframe_pcborigin, from_=0.0, to=100.0)
        self.gui_3dp_pcbxorig.place(relx=0.72, rely=0.286, relheight=0.181
                , relwidth=0.22, bordermode='ignore')
        self.gui_3dp_pcbxorig.configure(activebackground="#f9f9f9")
        self.gui_3dp_pcbxorig.configure(background="white")
        self.gui_3dp_pcbxorig.configure(buttonbackground="#d9d9d9")
        self.gui_3dp_pcbxorig.configure(command=gerber2gcode_gui_support.gui_3dp_updatedorigin)
        self.gui_3dp_pcbxorig.configure(disabledforeground="#a3a3a3")
        self.gui_3dp_pcbxorig.configure(font="TkDefaultFont")
        self.gui_3dp_pcbxorig.configure(foreground="black")
        self.gui_3dp_pcbxorig.configure(format="%1.1f")
        self.gui_3dp_pcbxorig.configure(highlightbackground="black")
        self.gui_3dp_pcbxorig.configure(highlightcolor="black")
        self.gui_3dp_pcbxorig.configure(increment="0.1")
        self.gui_3dp_pcbxorig.configure(insertbackground="black")
        self.gui_3dp_pcbxorig.configure(selectbackground="#c4c4c4")
        self.gui_3dp_pcbxorig.configure(selectforeground="black")
        self.gui_3dp_pcbxorig.configure(textvariable=gerber2gcode_gui_support.gui_3dp_pcbxorig)

        self.Label_PCBOriginX = tk.Label(self.gui_labelframe_pcborigin)
        self.Label_PCBOriginX.place(relx=0.04, rely=0.286, height=21, width=84
                , bordermode='ignore')
        self.Label_PCBOriginX.configure(activebackground="#f9f9f9")
        self.Label_PCBOriginX.configure(activeforeground="black")
        self.Label_PCBOriginX.configure(anchor='w')
        self.Label_PCBOriginX.configure(background="#d9d9d9")
        self.Label_PCBOriginX.configure(disabledforeground="#a3a3a3")
        self.Label_PCBOriginX.configure(foreground="#000000")
        self.Label_PCBOriginX.configure(highlightbackground="#d9d9d9")
        self.Label_PCBOriginX.configure(highlightcolor="black")
        self.Label_PCBOriginX.configure(text='''On X axis (mm)''')

        self.Label_PCBOriginY = tk.Label(self.gui_labelframe_pcborigin)
        self.Label_PCBOriginY.place(relx=0.04, rely=0.476, height=21, width=84
                , bordermode='ignore')
        self.Label_PCBOriginY.configure(activebackground="#f9f9f9")
        self.Label_PCBOriginY.configure(activeforeground="black")
        self.Label_PCBOriginY.configure(anchor='w')
        self.Label_PCBOriginY.configure(background="#d9d9d9")
        self.Label_PCBOriginY.configure(disabledforeground="#a3a3a3")
        self.Label_PCBOriginY.configure(foreground="#000000")
        self.Label_PCBOriginY.configure(highlightbackground="#d9d9d9")
        self.Label_PCBOriginY.configure(highlightcolor="black")
        self.Label_PCBOriginY.configure(text='''On Y axis (mm)''')

        self.gui_3dp_pcbyorig = tk.Spinbox(self.gui_labelframe_pcborigin, from_=0.0, to=100.0)
        self.gui_3dp_pcbyorig.place(relx=0.72, rely=0.476, relheight=0.181
                , relwidth=0.22, bordermode='ignore')
        self.gui_3dp_pcbyorig.configure(activebackground="#f9f9f9")
        self.gui_3dp_pcbyorig.configure(background="white")
        self.gui_3dp_pcbyorig.configure(buttonbackground="#d9d9d9")
        self.gui_3dp_pcbyorig.configure(command=gerber2gcode_gui_support.gui_3dp_updatedorigin)
        self.gui_3dp_pcbyorig.configure(disabledforeground="#a3a3a3")
        self.gui_3dp_pcbyorig.configure(font="TkDefaultFont")
        self.gui_3dp_pcbyorig.configure(foreground="black")
        self.gui_3dp_pcbyorig.configure(format="%1.1f")
        self.gui_3dp_pcbyorig.configure(highlightbackground="black")
        self.gui_3dp_pcbyorig.configure(highlightcolor="black")
        self.gui_3dp_pcbyorig.configure(increment="0.1")
        self.gui_3dp_pcbyorig.configure(insertbackground="black")
        self.gui_3dp_pcbyorig.configure(selectbackground="#c4c4c4")
        self.gui_3dp_pcbyorig.configure(selectforeground="black")
        self.gui_3dp_pcbyorig.configure(textvariable=gerber2gcode_gui_support.gui_3dp_pcbyorig)

        self.Label_PCBOriginZ = tk.Label(self.gui_labelframe_pcborigin)
        self.Label_PCBOriginZ.place(relx=0.04, rely=0.667, height=21, width=84
                , bordermode='ignore')
        self.Label_PCBOriginZ.configure(activebackground="#f9f9f9")
        self.Label_PCBOriginZ.configure(activeforeground="black")
        self.Label_PCBOriginZ.configure(anchor='w')
        self.Label_PCBOriginZ.configure(background="#d9d9d9")
        self.Label_PCBOriginZ.configure(disabledforeground="#a3a3a3")
        self.Label_PCBOriginZ.configure(foreground="#000000")
        self.Label_PCBOriginZ.configure(highlightbackground="#d9d9d9")
        self.Label_PCBOriginZ.configure(highlightcolor="black")
        self.Label_PCBOriginZ.configure(text='''On Z axis (mm)''')

        self.gui_3dp_pcbzorig = tk.Spinbox(self.gui_labelframe_pcborigin, from_=0.0, to=100.0)
        self.gui_3dp_pcbzorig.place(relx=0.72, rely=0.667, relheight=0.181
                , relwidth=0.22, bordermode='ignore')
        self.gui_3dp_pcbzorig.configure(activebackground="#f9f9f9")
        self.gui_3dp_pcbzorig.configure(background="white")
        self.gui_3dp_pcbzorig.configure(buttonbackground="#d9d9d9")
        self.gui_3dp_pcbzorig.configure(command=gerber2gcode_gui_support.gui_3dp_updatedorigin)
        self.gui_3dp_pcbzorig.configure(disabledforeground="#a3a3a3")
        self.gui_3dp_pcbzorig.configure(font="TkDefaultFont")
        self.gui_3dp_pcbzorig.configure(foreground="black")
        self.gui_3dp_pcbzorig.configure(format="%1.2f")
        self.gui_3dp_pcbzorig.configure(highlightbackground="black")
        self.gui_3dp_pcbzorig.configure(highlightcolor="black")
        self.gui_3dp_pcbzorig.configure(increment="0.1")
        self.gui_3dp_pcbzorig.configure(insertbackground="black")
        self.gui_3dp_pcbzorig.configure(selectbackground="#c4c4c4")
        self.gui_3dp_pcbzorig.configure(selectforeground="black")
        self.gui_3dp_pcbzorig.configure(textvariable=gerber2gcode_gui_support.gui_3dp_pcbzorig)

        self.gui_labelframe_numberpcbs = tk.LabelFrame(self.gui_notebook_t0)
        self.gui_labelframe_numberpcbs.place(relx=0.013, rely=0.5
                , relheight=0.147, relwidth=0.313)
        self.gui_labelframe_numberpcbs.configure(relief='groove')
        self.gui_labelframe_numberpcbs.configure(foreground="black")
        self.gui_labelframe_numberpcbs.configure(text='''Number of PCBs''')
        self.gui_labelframe_numberpcbs.configure(background="#d9d9d9")
        self.gui_labelframe_numberpcbs.configure(highlightbackground="#d9d9d9")
        self.gui_labelframe_numberpcbs.configure(highlightcolor="black")

        self.gui_3dp_pcbxcount = tk.Spinbox(self.gui_labelframe_numberpcbs, from_=1.0, to=10.0)
        self.gui_3dp_pcbxcount.place(relx=0.72, rely=0.353, relheight=0.224
                , relwidth=0.22, bordermode='ignore')
        self.gui_3dp_pcbxcount.configure(activebackground="#f9f9f9")
        self.gui_3dp_pcbxcount.configure(background="white")
        self.gui_3dp_pcbxcount.configure(buttonbackground="#d9d9d9")
        self.gui_3dp_pcbxcount.configure(command=gerber2gcode_gui_support.gui_3dp_updatedcount)
        self.gui_3dp_pcbxcount.configure(disabledforeground="#a3a3a3")
        self.gui_3dp_pcbxcount.configure(font="TkDefaultFont")
        self.gui_3dp_pcbxcount.configure(foreground="black")
        self.gui_3dp_pcbxcount.configure(highlightbackground="black")
        self.gui_3dp_pcbxcount.configure(highlightcolor="black")
        self.gui_3dp_pcbxcount.configure(insertbackground="black")
        self.gui_3dp_pcbxcount.configure(selectbackground="#c4c4c4")
        self.gui_3dp_pcbxcount.configure(selectforeground="black")
        self.gui_3dp_pcbxcount.configure(textvariable=gerber2gcode_gui_support.gui_3dp_pcbxcount)

        self.Label_PCBCountX = tk.Label(self.gui_labelframe_numberpcbs)
        self.Label_PCBCountX.place(relx=0.04, rely=0.353, height=21, width=84
                , bordermode='ignore')
        self.Label_PCBCountX.configure(activebackground="#f9f9f9")
        self.Label_PCBCountX.configure(activeforeground="black")
        self.Label_PCBCountX.configure(anchor='w')
        self.Label_PCBCountX.configure(background="#d9d9d9")
        self.Label_PCBCountX.configure(disabledforeground="#a3a3a3")
        self.Label_PCBCountX.configure(foreground="#000000")
        self.Label_PCBCountX.configure(highlightbackground="#d9d9d9")
        self.Label_PCBCountX.configure(highlightcolor="black")
        self.Label_PCBCountX.configure(text='''On X axis''')

        self.Label_PCBCountY = tk.Label(self.gui_labelframe_numberpcbs)
        self.Label_PCBCountY.place(relx=0.04, rely=0.588, height=21, width=84
                , bordermode='ignore')
        self.Label_PCBCountY.configure(activebackground="#f9f9f9")
        self.Label_PCBCountY.configure(activeforeground="black")
        self.Label_PCBCountY.configure(anchor='w')
        self.Label_PCBCountY.configure(background="#d9d9d9")
        self.Label_PCBCountY.configure(disabledforeground="#a3a3a3")
        self.Label_PCBCountY.configure(foreground="#000000")
        self.Label_PCBCountY.configure(highlightbackground="#d9d9d9")
        self.Label_PCBCountY.configure(highlightcolor="black")
        self.Label_PCBCountY.configure(text='''On Y axis''')

        self.gui_3dp_pcbycount = tk.Spinbox(self.gui_labelframe_numberpcbs, from_=1.0, to=10.0)
        self.gui_3dp_pcbycount.place(relx=0.72, rely=0.588, relheight=0.224
                , relwidth=0.22, bordermode='ignore')
        self.gui_3dp_pcbycount.configure(activebackground="#f9f9f9")
        self.gui_3dp_pcbycount.configure(background="white")
        self.gui_3dp_pcbycount.configure(buttonbackground="#d9d9d9")
        self.gui_3dp_pcbycount.configure(command=gerber2gcode_gui_support.gui_3dp_updatedcount)
        self.gui_3dp_pcbycount.configure(disabledforeground="#a3a3a3")
        self.gui_3dp_pcbycount.configure(font="TkDefaultFont")
        self.gui_3dp_pcbycount.configure(foreground="black")
        self.gui_3dp_pcbycount.configure(highlightbackground="black")
        self.gui_3dp_pcbycount.configure(highlightcolor="black")
        self.gui_3dp_pcbycount.configure(insertbackground="black")
        self.gui_3dp_pcbycount.configure(selectbackground="#c4c4c4")
        self.gui_3dp_pcbycount.configure(selectforeground="black")
        self.gui_3dp_pcbycount.configure(textvariable=gerber2gcode_gui_support.gui_3dp_pcbycount)

        self.gui_labelframe_furthestpcbcoordinate = tk.LabelFrame(self.gui_notebook_t0)
        self.gui_labelframe_furthestpcbcoordinate.place(relx=0.013, rely=0.655
                , relheight=0.147, relwidth=0.313)
        self.gui_labelframe_furthestpcbcoordinate.configure(relief='groove')
        self.gui_labelframe_furthestpcbcoordinate.configure(foreground="black")
        self.gui_labelframe_furthestpcbcoordinate.configure(text='''PCB furthest coordinate (oposite of origin)''')
        self.gui_labelframe_furthestpcbcoordinate.configure(background="#d9d9d9")
        self.gui_labelframe_furthestpcbcoordinate.configure(highlightbackground="#d9d9d9")
        self.gui_labelframe_furthestpcbcoordinate.configure(highlightcolor="black")

        self.Label_PCBFurthestX = tk.Label(self.gui_labelframe_furthestpcbcoordinate)
        self.Label_PCBFurthestX.place(relx=0.04, rely=0.353, height=21, width=84
                , bordermode='ignore')
        self.Label_PCBFurthestX.configure(activebackground="#f9f9f9")
        self.Label_PCBFurthestX.configure(activeforeground="black")
        self.Label_PCBFurthestX.configure(anchor='w')
        self.Label_PCBFurthestX.configure(background="#d9d9d9")
        self.Label_PCBFurthestX.configure(disabledforeground="#a3a3a3")
        self.Label_PCBFurthestX.configure(foreground="#000000")
        self.Label_PCBFurthestX.configure(highlightbackground="#d9d9d9")
        self.Label_PCBFurthestX.configure(highlightcolor="black")
        self.Label_PCBFurthestX.configure(text='''On X axis (mm)''')

        self.Label_PCBFurthestY = tk.Label(self.gui_labelframe_furthestpcbcoordinate)
        self.Label_PCBFurthestY.place(relx=0.04, rely=0.588, height=21, width=84
                , bordermode='ignore')
        self.Label_PCBFurthestY.configure(activebackground="#f9f9f9")
        self.Label_PCBFurthestY.configure(activeforeground="black")
        self.Label_PCBFurthestY.configure(anchor='w')
        self.Label_PCBFurthestY.configure(background="#d9d9d9")
        self.Label_PCBFurthestY.configure(disabledforeground="#a3a3a3")
        self.Label_PCBFurthestY.configure(foreground="#000000")
        self.Label_PCBFurthestY.configure(highlightbackground="#d9d9d9")
        self.Label_PCBFurthestY.configure(highlightcolor="black")
        self.Label_PCBFurthestY.configure(text='''On Y axis (mm)''')

        self.gui_3dp_pcbxfurthest = tk.Spinbox(self.gui_labelframe_furthestpcbcoordinate, from_=0.0, to=100.0)
        self.gui_3dp_pcbxfurthest.place(relx=0.72, rely=0.353, relheight=0.224
                , relwidth=0.22, bordermode='ignore')
        self.gui_3dp_pcbxfurthest.configure(activebackground="#f9f9f9")
        self.gui_3dp_pcbxfurthest.configure(background="white")
        self.gui_3dp_pcbxfurthest.configure(buttonbackground="#d9d9d9")
        self.gui_3dp_pcbxfurthest.configure(command=gerber2gcode_gui_support.gui_3dp_updatedfurthest)
        self.gui_3dp_pcbxfurthest.configure(disabledforeground="#a3a3a3")
        self.gui_3dp_pcbxfurthest.configure(font="TkDefaultFont")
        self.gui_3dp_pcbxfurthest.configure(foreground="black")
        self.gui_3dp_pcbxfurthest.configure(format="%1.1f")
        self.gui_3dp_pcbxfurthest.configure(highlightbackground="black")
        self.gui_3dp_pcbxfurthest.configure(highlightcolor="black")
        self.gui_3dp_pcbxfurthest.configure(increment="0.1")
        self.gui_3dp_pcbxfurthest.configure(insertbackground="black")
        self.gui_3dp_pcbxfurthest.configure(selectbackground="#c4c4c4")
        self.gui_3dp_pcbxfurthest.configure(selectforeground="black")
        self.gui_3dp_pcbxfurthest.configure(textvariable=gerber2gcode_gui_support.gui_3dp_pcbxfurthest)

        self.gui_3dp_pcbyfurthest = tk.Spinbox(self.gui_labelframe_furthestpcbcoordinate, from_=0.0, to=100.0)
        self.gui_3dp_pcbyfurthest.place(relx=0.72, rely=0.588, relheight=0.224
                , relwidth=0.22, bordermode='ignore')
        self.gui_3dp_pcbyfurthest.configure(activebackground="#f9f9f9")
        self.gui_3dp_pcbyfurthest.configure(background="white")
        self.gui_3dp_pcbyfurthest.configure(buttonbackground="#d9d9d9")
        self.gui_3dp_pcbyfurthest.configure(command=gerber2gcode_gui_support.gui_3dp_updatedfurthest)
        self.gui_3dp_pcbyfurthest.configure(disabledforeground="#a3a3a3")
        self.gui_3dp_pcbyfurthest.configure(font="TkDefaultFont")
        self.gui_3dp_pcbyfurthest.configure(foreground="black")
        self.gui_3dp_pcbyfurthest.configure(format="%1.1f")
        self.gui_3dp_pcbyfurthest.configure(highlightbackground="black")
        self.gui_3dp_pcbyfurthest.configure(highlightcolor="black")
        self.gui_3dp_pcbyfurthest.configure(increment="0.1")
        self.gui_3dp_pcbyfurthest.configure(insertbackground="black")
        self.gui_3dp_pcbyfurthest.configure(selectbackground="#c4c4c4")
        self.gui_3dp_pcbyfurthest.configure(selectforeground="black")
        self.gui_3dp_pcbyfurthest.configure(textvariable=gerber2gcode_gui_support.gui_3dp_pcbyfurthest)

        self.gui_gcode_labelframe_initial = tk.LabelFrame(self.gui_notebook_t1)
        self.gui_gcode_labelframe_initial.place(relx=0.013, rely=0.017
                , relheight=0.457, relwidth=0.475)
        self.gui_gcode_labelframe_initial.configure(relief='groove')
        self.gui_gcode_labelframe_initial.configure(foreground="black")
        self.gui_gcode_labelframe_initial.configure(text='''Initial settings''')
        self.gui_gcode_labelframe_initial.configure(background="#d9d9d9")
        self.gui_gcode_labelframe_initial.configure(highlightbackground="#d9d9d9")
        self.gui_gcode_labelframe_initial.configure(highlightcolor="black")

        self.gui_checkbutton_gcode_autohome = tk.Checkbutton(self.gui_gcode_labelframe_initial)
        self.gui_checkbutton_gcode_autohome.place(relx=0.026, rely=0.113
                , relheight=0.057, relwidth=0.555, bordermode='ignore')
        self.gui_checkbutton_gcode_autohome.configure(activebackground="#ececec")
        self.gui_checkbutton_gcode_autohome.configure(activeforeground="#000000")
        self.gui_checkbutton_gcode_autohome.configure(anchor='w')
        self.gui_checkbutton_gcode_autohome.configure(background="#d9d9d9")
        self.gui_checkbutton_gcode_autohome.configure(disabledforeground="#a3a3a3")
        self.gui_checkbutton_gcode_autohome.configure(foreground="#000000")
        self.gui_checkbutton_gcode_autohome.configure(highlightbackground="#d9d9d9")
        self.gui_checkbutton_gcode_autohome.configure(highlightcolor="black")
        self.gui_checkbutton_gcode_autohome.configure(justify='left')
        self.gui_checkbutton_gcode_autohome.configure(text='''Auto-home (G28)''')
        self.gui_checkbutton_gcode_autohome.configure(variable=gerber2gcode_gui_support.che58)

        self.Entry1 = tk.Entry(self.gui_gcode_labelframe_initial)
        self.Entry1.place(relx=0.211, rely=0.453, height=20, relwidth=0.432
                , bordermode='ignore')
        self.Entry1.configure(background="white")
        self.Entry1.configure(disabledforeground="#a3a3a3")
        self.Entry1.configure(font="TkFixedFont")
        self.Entry1.configure(foreground="#000000")
        self.Entry1.configure(highlightbackground="#d9d9d9")
        self.Entry1.configure(highlightcolor="black")
        self.Entry1.configure(insertbackground="black")
        self.Entry1.configure(selectbackground="#c4c4c4")
        self.Entry1.configure(selectforeground="black")

        self.Spinbox1 = tk.Spinbox(self.gui_gcode_labelframe_initial, from_=1.0, to=20.0)
        self.Spinbox1.place(relx=0.842, rely=0.113, relheight=0.072
                , relwidth=0.118, bordermode='ignore')
        self.Spinbox1.configure(activebackground="#f9f9f9")
        self.Spinbox1.configure(background="white")
        self.Spinbox1.configure(buttonbackground="#d9d9d9")
        self.Spinbox1.configure(disabledforeground="#a3a3a3")
        self.Spinbox1.configure(font="TkDefaultFont")
        self.Spinbox1.configure(foreground="black")
        self.Spinbox1.configure(highlightbackground="black")
        self.Spinbox1.configure(highlightcolor="black")
        self.Spinbox1.configure(insertbackground="black")
        self.Spinbox1.configure(selectbackground="#c4c4c4")
        self.Spinbox1.configure(selectforeground="black")
        self.Spinbox1.configure(textvariable=gerber2gcode_gui_support.spinbox)

        self.gui_gcode_labelframe_final = tk.LabelFrame(self.gui_notebook_t1)
        self.gui_gcode_labelframe_final.place(relx=0.513, rely=0.017
                , relheight=0.284, relwidth=0.475)
        self.gui_gcode_labelframe_final.configure(relief='groove')
        self.gui_gcode_labelframe_final.configure(foreground="black")
        self.gui_gcode_labelframe_final.configure(text='''Final settings''')
        self.gui_gcode_labelframe_final.configure(background="#d9d9d9")
        self.gui_gcode_labelframe_final.configure(highlightbackground="#d9d9d9")
        self.gui_gcode_labelframe_final.configure(highlightcolor="black")

        self.gui_log_window = tk.Text(self.gui_notebook_t3)
        self.gui_log_window.place(relx=0.013, rely=0.069, relheight=0.869
                , relwidth=0.968)
        self.gui_log_window.configure(background="white")
        self.gui_log_window.configure(exportselection="0")
        self.gui_log_window.configure(font="TkTextFont")
        self.gui_log_window.configure(foreground="black")
        self.gui_log_window.configure(highlightbackground="#d9d9d9")
        self.gui_log_window.configure(highlightcolor="black")
        self.gui_log_window.configure(insertbackground="black")
        self.gui_log_window.configure(selectbackground="#c4c4c4")
        self.gui_log_window.configure(selectforeground="black")
        self.gui_log_window.configure(wrap="word")

        self.gui_button_clearlog = tk.Button(self.gui_notebook_t3)
        self.gui_button_clearlog.place(relx=0.013, rely=0.017, height=24
                , width=77)
        self.gui_button_clearlog.configure(activebackground="#ececec")
        self.gui_button_clearlog.configure(activeforeground="#000000")
        self.gui_button_clearlog.configure(background="#d9d9d9")
        self.gui_button_clearlog.configure(command=gerber2gcode_gui_support.gui_button_clearlog)
        self.gui_button_clearlog.configure(disabledforeground="#a3a3a3")
        self.gui_button_clearlog.configure(foreground="#000000")
        self.gui_button_clearlog.configure(highlightbackground="#d9d9d9")
        self.gui_button_clearlog.configure(highlightcolor="black")
        self.gui_button_clearlog.configure(pady="0")
        self.gui_button_clearlog.configure(text='''Clear log''')

if __name__ == '__main__':
    vp_start_gui()





